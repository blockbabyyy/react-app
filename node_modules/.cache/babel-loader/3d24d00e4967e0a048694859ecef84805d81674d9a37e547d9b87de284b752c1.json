{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerList(_ref) {\n  _s();\n  let {\n    items,\n    onDelete\n  } = _ref;\n  const [selectedItems, setSelectedItems] = useState([]);\n  const [selectMode, setSelectMode] = useState(false);\n  const handleSelectItem = item => {\n    const isSelected = selectedItems.includes(item);\n    let updatedSelectedItems;\n    if (isSelected) {\n      updatedSelectedItems = selectedItems.filter(selectedItem => selectedItem !== item);\n    } else {\n      updatedSelectedItems = [...selectedItems, item];\n    }\n    setSelectedItems(updatedSelectedItems);\n  };\n  const handleDeleteSelected = () => {\n    const updatedItems = items.filter(item => !selectedItems.includes(item));\n    onDelete(updatedItems);\n    setSelectedItems([]);\n    setSelectMode(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [selectMode ? /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-danger\",\n      onClick: handleDeleteSelected,\n      children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \\u0432\\u044B\\u0431\\u0440\\u0430\\u043D\\u043D\\u044B\\u0435\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outline-primary\",\n      onClick: () => setSelectMode(true),\n      children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n        className: \"d-flex align-items-center\",\n        children: [selectMode && /*#__PURE__*/_jsxDEV(Form.Check, {\n          type: \"checkbox\",\n          checked: selectedItems.includes(item),\n          onChange: () => handleSelectItem(item),\n          className: \"mr-3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), item.name]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n_s(ServerList, \"CJKsBQbc/LdsQeocdGu9oEYgSys=\");\n_c = ServerList;\nexport default ServerList;\nvar _c;\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["React","useState","ListGroup","Button","Form","jsxDEV","_jsxDEV","ServerList","_ref","_s","items","onDelete","selectedItems","setSelectedItems","selectMode","setSelectMode","handleSelectItem","item","isSelected","includes","updatedSelectedItems","filter","selectedItem","handleDeleteSelected","updatedItems","children","variant","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","index","Item","className","Check","type","checked","onChange","name","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerList.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nfunction ServerList({ items, onDelete }) {\r\n    const [selectedItems, setSelectedItems] = useState([]);\r\n    const [selectMode, setSelectMode] = useState(false);\r\n\r\n    const handleSelectItem = (item) => {\r\n        const isSelected = selectedItems.includes(item);\r\n        let updatedSelectedItems;\r\n\r\n        if (isSelected) {\r\n            updatedSelectedItems = selectedItems.filter(\r\n                (selectedItem) => selectedItem !== item\r\n            );\r\n        } else {\r\n            updatedSelectedItems = [...selectedItems, item];\r\n        }\r\n\r\n        setSelectedItems(updatedSelectedItems);\r\n    };\r\n\r\n    const handleDeleteSelected = () => {\r\n        const updatedItems = items.filter(\r\n            (item) => !selectedItems.includes(item)\r\n        );\r\n        onDelete(updatedItems);\r\n        setSelectedItems([]);\r\n        setSelectMode(false);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {selectMode ? (\r\n                <Button variant=\"outline-danger\" onClick={handleDeleteSelected}>\r\n                    Удалить выбранные\r\n                </Button>\r\n            ) : (\r\n                <Button variant=\"outline-primary\" onClick={() => setSelectMode(true)}>\r\n                    Выбрать\r\n                </Button>\r\n            )}\r\n\r\n            <ListGroup>\r\n                {items.map((item, index) => (\r\n                    <ListGroup.Item key={index} className=\"d-flex align-items-center\">\r\n                        {selectMode && (\r\n                            <Form.Check\r\n                                type=\"checkbox\"\r\n                                checked={selectedItems.includes(item)}\r\n                                onChange={() => handleSelectItem(item)}\r\n                                className=\"mr-3\"\r\n                            />\r\n                        )}\r\n                        {item.name}\r\n                    </ListGroup.Item>\r\n                ))}\r\n            </ListGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ServerList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,IAAI,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,UAAUA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC,KAAK;IAAEC;EAAS,CAAC,GAAAH,IAAA;EACnC,MAAM,CAACI,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtD,MAAM,CAACa,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMe,gBAAgB,GAAIC,IAAI,IAAK;IAC/B,MAAMC,UAAU,GAAGN,aAAa,CAACO,QAAQ,CAACF,IAAI,CAAC;IAC/C,IAAIG,oBAAoB;IAExB,IAAIF,UAAU,EAAE;MACZE,oBAAoB,GAAGR,aAAa,CAACS,MAAM,CACtCC,YAAY,IAAKA,YAAY,KAAKL,IACvC,CAAC;IACL,CAAC,MAAM;MACHG,oBAAoB,GAAG,CAAC,GAAGR,aAAa,EAAEK,IAAI,CAAC;IACnD;IAEAJ,gBAAgB,CAACO,oBAAoB,CAAC;EAC1C,CAAC;EAED,MAAMG,oBAAoB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,YAAY,GAAGd,KAAK,CAACW,MAAM,CAC5BJ,IAAI,IAAK,CAACL,aAAa,CAACO,QAAQ,CAACF,IAAI,CAC1C,CAAC;IACDN,QAAQ,CAACa,YAAY,CAAC;IACtBX,gBAAgB,CAAC,EAAE,CAAC;IACpBE,aAAa,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACIT,OAAA;IAAAmB,QAAA,GACKX,UAAU,gBACPR,OAAA,CAACH,MAAM;MAACuB,OAAO,EAAC,gBAAgB;MAACC,OAAO,EAAEJ,oBAAqB;MAAAE,QAAA,EAAC;IAEhE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,gBAETzB,OAAA,CAACH,MAAM;MAACuB,OAAO,EAAC,iBAAiB;MAACC,OAAO,EAAEA,CAAA,KAAMZ,aAAa,CAAC,IAAI,CAAE;MAAAU,QAAA,EAAC;IAEtE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACX,eAEDzB,OAAA,CAACJ,SAAS;MAAAuB,QAAA,EACLf,KAAK,CAACsB,GAAG,CAAC,CAACf,IAAI,EAAEgB,KAAK,kBACnB3B,OAAA,CAACJ,SAAS,CAACgC,IAAI;QAAaC,SAAS,EAAC,2BAA2B;QAAAV,QAAA,GAC5DX,UAAU,iBACPR,OAAA,CAACF,IAAI,CAACgC,KAAK;UACPC,IAAI,EAAC,UAAU;UACfC,OAAO,EAAE1B,aAAa,CAACO,QAAQ,CAACF,IAAI,CAAE;UACtCsB,QAAQ,EAAEA,CAAA,KAAMvB,gBAAgB,CAACC,IAAI,CAAE;UACvCkB,SAAS,EAAC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CACJ,EACAd,IAAI,CAACuB,IAAI;MAAA,GATOP,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAUV,CACnB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAEd;AAACtB,EAAA,CAzDQF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AA2DnB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}