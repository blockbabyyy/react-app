{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerItem.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerItem(_ref) {\n  _s();\n  let {\n    item\n  } = _ref;\n  const {\n    name,\n    ipAddress,\n    port\n  } = item;\n  const [radioValue, setRadioValue] = useState(buttonNames[0]);\n  const radios = buttonNames.map((name, index) => ({\n    ind: name,\n    value: `${index}`\n  }));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '31rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      className: \"m-3\",\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n      className: \"mx-3\",\n      children: [item.ipAddress, \":\", item.port]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `radio-${idx}`,\n          type: \"radio\",\n          variant: \"outline-success\",\n          name: \"radio\",\n          value: radio.value,\n          checked: radioValue === radio.value,\n          onChange: e => setRadioValue(e.currentTarget.value),\n          disabled: false // Установите disabled в false, чтобы активировать все кнопки\n          ,\n          children: radio.ind\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n}\n_s(ServerItem, \"jA5vF1Eev4Q8/ah+6usF7bRsD8Q=\");\n_c = ServerItem;\nexport default ServerItem;\nvar _c;\n$RefreshReg$(_c, \"ServerItem\");","map":{"version":3,"names":["ServerItem","_ref","_s","item","name","ipAddress","port","radioValue","setRadioValue","useState","buttonNames","radios","map","index","ind","value","_jsxDEV","Card","style","width","children","Title","className","fileName","_jsxFileName","lineNumber","columnNumber","Subtitle","Body","ButtonGroup","radio","idx","ToggleButton","id","type","variant","checked","onChange","e","currentTarget","disabled","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerItem.js"],"sourcesContent":["function ServerItem({ item }) {\r\n    const { name, ipAddress, port } = item;\r\n    \r\n    const [radioValue, setRadioValue] = useState(buttonNames[0]);\r\n    const radios = buttonNames.map((name, index) => ({ ind: name, value: `${index}` }));\r\n\r\n    return (\r\n        <Card style={{ width: '31rem' }}>\r\n            <Card.Title className=\"m-3\">{item.name}</Card.Title>\r\n            <Card.Subtitle className=\"mx-3\">{item.ipAddress}:{item.port}</Card.Subtitle>\r\n            <Card.Body>\r\n                <ButtonGroup>\r\n                    {radios.map((radio, idx) => (\r\n                        <ToggleButton\r\n                            key={idx}\r\n                            id={`radio-${idx}`}\r\n                            type=\"radio\"\r\n                            variant=\"outline-success\"\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={radioValue === radio.value}\r\n                            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n                            disabled={false} // Установите disabled в false, чтобы активировать все кнопки\r\n                        >\r\n                            {radio.ind}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ServerItem;\r\n"],"mappings":";;;AAAA,SAASA,UAAUA,CAAAC,IAAA,EAAW;EAAAC,EAAA;EAAA,IAAV;IAAEC;EAAK,CAAC,GAAAF,IAAA;EACxB,MAAM;IAAEG,IAAI;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGH,IAAI;EAEtC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGC,QAAQ,CAACC,WAAW,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMC,MAAM,GAAGD,WAAW,CAACE,GAAG,CAAC,CAACR,IAAI,EAAES,KAAK,MAAM;IAAEC,GAAG,EAAEV,IAAI;IAAEW,KAAK,EAAG,GAAEF,KAAM;EAAE,CAAC,CAAC,CAAC;EAEnF,oBACIG,OAAA,CAACC,IAAI;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC5BJ,OAAA,CAACC,IAAI,CAACI,KAAK;MAACC,SAAS,EAAC,KAAK;MAAAF,QAAA,EAAEjB,IAAI,CAACC;IAAI;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACpDV,OAAA,CAACC,IAAI,CAACU,QAAQ;MAACL,SAAS,EAAC,MAAM;MAAAF,QAAA,GAAEjB,IAAI,CAACE,SAAS,EAAC,GAAC,EAACF,IAAI,CAACG,IAAI;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,eAC5EV,OAAA,CAACC,IAAI,CAACW,IAAI;MAAAR,QAAA,eACNJ,OAAA,CAACa,WAAW;QAAAT,QAAA,EACPT,MAAM,CAACC,GAAG,CAAC,CAACkB,KAAK,EAAEC,GAAG,kBACnBf,OAAA,CAACgB,YAAY;UAETC,EAAE,EAAG,SAAQF,GAAI,EAAE;UACnBG,IAAI,EAAC,OAAO;UACZC,OAAO,EAAC,iBAAiB;UACzB/B,IAAI,EAAC,OAAO;UACZW,KAAK,EAAEe,KAAK,CAACf,KAAM;UACnBqB,OAAO,EAAE7B,UAAU,KAAKuB,KAAK,CAACf,KAAM;UACpCsB,QAAQ,EAAGC,CAAC,IAAK9B,aAAa,CAAC8B,CAAC,CAACC,aAAa,CAACxB,KAAK,CAAE;UACtDyB,QAAQ,EAAE,KAAM,CAAC;UAAA;UAAApB,QAAA,EAEhBU,KAAK,CAAChB;QAAG,GAVLiB,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAWE,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf;AAACxB,EAAA,CA/BQF,UAAU;AAAAyC,EAAA,GAAVzC,UAAU;AAiCnB,eAAeA,UAAU;AAAC,IAAAyC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}