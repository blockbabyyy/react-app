{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerList.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ServerContext from './ServerContext';\nimport { Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerList() {\n  _s();\n  const {\n    servers,\n    deleteServer,\n    editServer\n  } = useContext(ServerContext);\n  const [selectedOption, setSelectedOption] = useState('');\n  const handleDelete = server => {\n    deleteServer(server);\n  };\n  const handleEdit = server => {\n    editServer(server);\n  };\n  const handleOptionChange = selectedOption => {\n    setSelectedOption(selectedOption);\n    // You can perform any other logic or update the server data here based on the selected option\n    // For example, you can update the 'server' object with the selected option value\n  };\n\n  return /*#__PURE__*/_jsxDEV(Row, {\n    xs: 1,\n    md: 2,\n    lg: 4,\n    className: \"g-4\",\n    children: servers.map((server, index) => /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        style: {\n          height: '30rem',\n          width: '20rem',\n          marginRight: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: server.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"IP Address:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 33\n            }, this), \" \", server.ipAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Port:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this), \" \", server.port]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            children: [1, 2, 3, 4, 5, 6].map(option => /*#__PURE__*/_jsxDEV(ToggleButton, {\n              id: `radio-${server.ipAddress}${index}`,\n              type: \"radio\",\n              variant: 'outline-primary',\n              name: `radio-group-${index}`,\n              value: `${server.ipAddress}${server.port}${index}`,\n              checked: selectedOption === `${server.ipAddress}${server.port}${index}`,\n              onChange: handleOptionChange,\n              children: [\"\\u0412\\u044B\\u0432\\u043E\\u0434 \", option]\n            }, `${server.ipAddress}${index}`, true, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"me-1\",\n            variant: \"outline-danger\",\n            onClick: () => handleDelete(server),\n            children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"me-1\",\n            variant: \"outline-primary\",\n            onClick: () => handleEdit(server),\n            children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this)\n      }, server.ipAddress, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(ServerList, \"wLawKOaMB9a3ZA5umLyQlwx4Mq4=\");\n_c = ServerList;\nexport default ServerList;\nvar _c;\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["React","useContext","useState","Card","Button","ButtonGroup","ToggleButton","ServerContext","Col","Row","jsxDEV","_jsxDEV","ServerList","_s","servers","deleteServer","editServer","selectedOption","setSelectedOption","handleDelete","server","handleEdit","handleOptionChange","xs","md","lg","className","children","map","index","style","height","width","marginRight","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","ipAddress","port","option","id","type","variant","value","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerList.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ServerContext from './ServerContext';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nfunction ServerList() {\r\n    const { servers, deleteServer, editServer } = useContext(ServerContext);\r\n    const [selectedOption, setSelectedOption] = useState('');\r\n\r\n    const handleDelete = (server) => {\r\n        deleteServer(server);\r\n    };\r\n\r\n    const handleEdit = (server) => {\r\n        editServer(server);\r\n    };\r\n\r\n    const handleOptionChange = (selectedOption) => {\r\n        setSelectedOption(selectedOption);\r\n        // You can perform any other logic or update the server data here based on the selected option\r\n        // For example, you can update the 'server' object with the selected option value\r\n    };\r\n\r\n    return (\r\n        <Row xs={1} md={2} lg={4} className=\"g-4\">\r\n            {servers.map((server, index) => (\r\n                <Col key={index}>\r\n                    <Card key={server.ipAddress} style={{ height: '30rem', width: '20rem', marginRight: '10px' }}>\r\n                        <Card.Body>\r\n                            <Card.Title>{server.name}</Card.Title>\r\n                            <Card.Text>\r\n                                <strong>IP Address:</strong> {server.ipAddress}\r\n                                <br />\r\n                                <strong>Port:</strong> {server.port}\r\n                            </Card.Text>\r\n                            <ButtonGroup>\r\n                                {[1, 2, 3, 4, 5, 6].map((option) => (\r\n                                    <ToggleButton\r\n                                        key={`${server.ipAddress}${index}`}\r\n                                        id={`radio-${server.ipAddress}${index}`}\r\n                                        type=\"radio\"\r\n                                        variant={'outline-primary'}\r\n                                        name={`radio-group-${index}`}\r\n                                        value={`${server.ipAddress}${server.port}${index}`}\r\n                                        checked={selectedOption === `${server.ipAddress}${server.port}${index}`}\r\n                                        onChange={handleOptionChange}\r\n                                    >\r\n                                        Вывод {option}\r\n                                    </ToggleButton>\r\n                                ))}\r\n                            </ButtonGroup>\r\n                            <Button className=\"me-1\" variant=\"outline-danger\" onClick={() => handleDelete(server)}>\r\n                                Удалить\r\n                            </Button>\r\n                            <Button className=\"me-1\" variant=\"outline-primary\" onClick={() => handleEdit(server)}>\r\n                                Изменить\r\n                            </Button>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ServerList;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}