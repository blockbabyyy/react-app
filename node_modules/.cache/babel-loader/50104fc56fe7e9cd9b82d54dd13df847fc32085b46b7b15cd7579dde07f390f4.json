{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerItem.js\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport '../Styles/ServerList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerItem( /*{ item }*/\n) {\n  /*const { name, ipAddress, port } = item;*/\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '18rem'\n    },\n    className: \"justify-content-center\",\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      children: \"\\u041A\\u043E\\u043C\\u043C\\u0443\\u0442\\u0430\\u0442\\u043E\\u0440 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n      children: \"191.168.1.1:3000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `radio-${idx}`,\n          type: \"radio\",\n          variant: idx % 2 ? 'outline-success' : 'outline-danger',\n          name: \"radio\",\n          value: radio.value,\n          checked: radioValue === radio.value,\n          onChange: e => setRadioValue(e.currentTarget.value),\n          children: radio.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n_c = ServerItem;\nexport default ServerItem;\nvar _c;\n$RefreshReg$(_c, \"ServerItem\");","map":{"version":3,"names":["React","Card","jsxDEV","_jsxDEV","ServerItem","style","width","className","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","Subtitle","Body","ButtonGroup","radios","map","radio","idx","ToggleButton","id","type","variant","name","value","checked","radioValue","onChange","e","setRadioValue","currentTarget","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerItem.js"],"sourcesContent":["import React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport '../Styles/ServerList.css';\r\n\r\nfunction ServerItem(/*{ item }*/) {\r\n    /*const { name, ipAddress, port } = item;*/\r\n\r\n    return (\r\n        <Card style={{ width: '18rem' }} className=\"justify-content-center\">\r\n            <Card.Title>Коммутатор 1</Card.Title>\r\n            <Card.Subtitle>191.168.1.1:3000</Card.Subtitle>\r\n            <Card.Body>\r\n                <ButtonGroup>\r\n                    {radios.map((radio, idx) => (\r\n                        <ToggleButton\r\n                            key={idx}\r\n                            id={`radio-${idx}`}\r\n                            type=\"radio\"\r\n                            variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={radioValue === radio.value}\r\n                            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n                        >\r\n                            {radio.name}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ServerItem;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAA,CAAC;AAAA,EAAc;EAC9B;;EAEA,oBACID,OAAA,CAACF,IAAI;IAACI,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAACC,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBAC/DL,OAAA,CAACF,IAAI,CAACQ,KAAK;MAAAD,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACrCV,OAAA,CAACF,IAAI,CAACa,QAAQ;MAAAN,QAAA,EAAC;IAAgB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,eAC/CV,OAAA,CAACF,IAAI,CAACc,IAAI;MAAAP,QAAA,eACNL,OAAA,CAACa,WAAW;QAAAR,QAAA,EACPS,MAAM,CAACC,GAAG,CAAC,CAACC,KAAK,EAAEC,GAAG,kBACnBjB,OAAA,CAACkB,YAAY;UAETC,EAAE,EAAG,SAAQF,GAAI,EAAE;UACnBG,IAAI,EAAC,OAAO;UACZC,OAAO,EAAEJ,GAAG,GAAG,CAAC,GAAG,iBAAiB,GAAG,gBAAiB;UACxDK,IAAI,EAAC,OAAO;UACZC,KAAK,EAAEP,KAAK,CAACO,KAAM;UACnBC,OAAO,EAAEC,UAAU,KAAKT,KAAK,CAACO,KAAM;UACpCG,QAAQ,EAAGC,CAAC,IAAKC,aAAa,CAACD,CAAC,CAACE,aAAa,CAACN,KAAK,CAAE;UAAAlB,QAAA,EAErDW,KAAK,CAACM;QAAI,GATNL,GAAG;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUE,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf;AAACoB,EAAA,GA3BQ7B,UAAU;AA6BnB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}