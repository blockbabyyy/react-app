{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerItem(_ref) {\n  _s();\n  let {\n    item,\n    buttonNames\n  } = _ref;\n  const {\n    name,\n    ipAddress,\n    port\n  } = item;\n  const [radioValue, setRadioValue] = useState('');\n  const radios = [{\n    name: 'Active',\n    value: '1'\n  }, {\n    name: 'Radio',\n    value: '2'\n  }, {\n    name: 'Radio',\n    value: '3'\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '31rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      className: \"m-3\",\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n      className: \"mx-3\",\n      children: [ipAddress, \":\", port]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: buttonNames.map((buttonName, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `radio-${idx}`,\n          type: \"radio\",\n          variant: idx % 2 ? 'outline-success' : 'outline-danger',\n          name: \"radio\",\n          value: radio.value,\n          checked: radioValue === radio.value,\n          onChange: e => setRadioValue(e.currentTarget.value),\n          children: radio.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(ServerItem, \"0Ufjp+kadULFWkplzfENKgWuqHo=\");\n_c = ServerItem;\nexport default ServerItem;\nvar _c;\n$RefreshReg$(_c, \"ServerItem\");","map":{"version":3,"names":["useState","Card","ButtonGroup","ToggleButton","jsxDEV","_jsxDEV","ServerItem","_ref","_s","item","buttonNames","name","ipAddress","port","radioValue","setRadioValue","radios","value","style","width","children","Title","className","fileName","_jsxFileName","lineNumber","columnNumber","Subtitle","Body","map","buttonName","idx","id","type","variant","radio","checked","onChange","e","currentTarget","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerItem.js"],"sourcesContent":["import { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\r\n\r\nfunction ServerItem({ item, buttonNames }) {\r\n    const { name, ipAddress, port } = item;\r\n    const [radioValue, setRadioValue] = useState('');\r\n    \r\n\r\n    const radios = [\r\n        { name: 'Active', value: '1' },\r\n        { name: 'Radio', value: '2' },\r\n        { name: 'Radio', value: '3' },\r\n    ];\r\n\r\n    return (\r\n        <Card style={{ width: '31rem' }}>\r\n            <Card.Title className=\"m-3\">{name}</Card.Title>\r\n            <Card.Subtitle className=\"mx-3\">\r\n                {ipAddress}:{port}\r\n            </Card.Subtitle>\r\n            <Card.Body>\r\n                <ButtonGroup>\r\n                    {buttonNames.map((buttonName, idx) => (\r\n                        <ToggleButton\r\n                            key={idx}\r\n                            id={`radio-${idx}`}\r\n                            type=\"radio\"\r\n                            variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={radioValue === radio.value}\r\n                            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n                        >\r\n                            {radio.name}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ServerItem;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAASC,WAAW,EAAEC,YAAY,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,SAASC,UAAUA,CAAAC,IAAA,EAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACrC,MAAM;IAAEI,IAAI;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGJ,IAAI;EACtC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAGhD,MAAMgB,MAAM,GAAG,CACX;IAAEL,IAAI,EAAE,QAAQ;IAAEM,KAAK,EAAE;EAAI,CAAC,EAC9B;IAAEN,IAAI,EAAE,OAAO;IAAEM,KAAK,EAAE;EAAI,CAAC,EAC7B;IAAEN,IAAI,EAAE,OAAO;IAAEM,KAAK,EAAE;EAAI,CAAC,CAChC;EAED,oBACIZ,OAAA,CAACJ,IAAI;IAACiB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC5Bf,OAAA,CAACJ,IAAI,CAACoB,KAAK;MAACC,SAAS,EAAC,KAAK;MAAAF,QAAA,EAAET;IAAI;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eAC/CrB,OAAA,CAACJ,IAAI,CAAC0B,QAAQ;MAACL,SAAS,EAAC,MAAM;MAAAF,QAAA,GAC1BR,SAAS,EAAC,GAAC,EAACC,IAAI;IAAA;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAChBrB,OAAA,CAACJ,IAAI,CAAC2B,IAAI;MAAAR,QAAA,eACNf,OAAA,CAACH,WAAW;QAAAkB,QAAA,EACPV,WAAW,CAACmB,GAAG,CAAC,CAACC,UAAU,EAAEC,GAAG,kBAC7B1B,OAAA,CAACF,YAAY;UAET6B,EAAE,EAAG,SAAQD,GAAI,EAAE;UACnBE,IAAI,EAAC,OAAO;UACZC,OAAO,EAAEH,GAAG,GAAG,CAAC,GAAG,iBAAiB,GAAG,gBAAiB;UACxDpB,IAAI,EAAC,OAAO;UACZM,KAAK,EAAEkB,KAAK,CAAClB,KAAM;UACnBmB,OAAO,EAAEtB,UAAU,KAAKqB,KAAK,CAAClB,KAAM;UACpCoB,QAAQ,EAAGC,CAAC,IAAKvB,aAAa,CAACuB,CAAC,CAACC,aAAa,CAACtB,KAAK,CAAE;UAAAG,QAAA,EAErDe,KAAK,CAACxB;QAAI,GATNoB,GAAG;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUE,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf;AAAClB,EAAA,CArCQF,UAAU;AAAAkC,EAAA,GAAVlC,UAAU;AAuCnB,eAAeA,UAAU;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}