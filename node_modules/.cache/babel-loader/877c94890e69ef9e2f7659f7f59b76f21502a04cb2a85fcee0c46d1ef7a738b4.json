{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\AddDevice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\nimport { Card, FloatingLabel } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddDevice(_ref) {\n  _s();\n  let {\n    onAdd\n  } = _ref;\n  const [name, setName] = useState('');\n  const [ipAddress, setIPAddress] = useState('');\n  const [port, setPort] = useState('');\n  const [data, setData] = useState([]);\n  const [ipError, setIpError] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isValidIP = validateIPAddress(ipAddress);\n    if (!isValidIP) {\n      setIpError('Неправильный формат IP-адреса');\n      return;\n    }\n    const isNewIP = !data.some(item => item.ipAddress === ipAddress);\n    if (!isNewIP) {\n      setIpError('Такой IP-адрес уже существует');\n      return;\n    }\n    const newData = {\n      name: name,\n      ipAddress: ipAddress,\n      port: port\n    };\n    onAdd(newData);\n    setData([...data, newData]);\n    setName('');\n    setIPAddress('');\n    setIpError('');\n    setPort('');\n  };\n  const validateIPAddress = ip => {\n    const ipPattern = /^([0-9]{1,3}\\.){3}[0-9]{1,3}$/;\n    return ipPattern.test(ip);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"name\",\n          visuallyHidden: true,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"name\",\n          className: \"mb-2 \",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"ipAdress\",\n          visuallyHidden: true,\n          children: \"IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            className: `mb-2 ${ipError ? 'is-invalid' : ''}`,\n            type: \"ip\",\n            id: \"ipAdress\",\n            value: ipAddress,\n            onChange: e => setIPAddress(e.target.value),\n            placeholder: \"IP-\\u0410\\u0434\\u0440\\u0435\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: ipError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"port\",\n          visuallyHidden: true,\n          children: \"Port\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"port\",\n          className: \"mb-2 \",\n          value: port,\n          onChange: e => setPort(e.target.value),\n          placeholder: \"\\u041F\\u043E\\u0440\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mb-2\",\n          onClick: handleSubmit,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 17\n  }, this);\n}\n_s(AddDevice, \"uV+xH6P9H+Sb16KKdVsL/FRBL0Q=\");\n_c = AddDevice;\nexport default AddDevice;\nvar _c;\n$RefreshReg$(_c, \"AddDevice\");","map":{"version":3,"names":["React","useState","Button","Col","Form","InputGroup","Row","Card","FloatingLabel","jsxDEV","_jsxDEV","AddDevice","_ref","_s","onAdd","name","setName","ipAddress","setIPAddress","port","setPort","data","setData","ipError","setIpError","handleSubmit","event","preventDefault","isValidIP","validateIPAddress","isNewIP","some","item","newData","ip","ipPattern","test","children","xs","Label","htmlFor","visuallyHidden","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","id","className","value","onChange","e","target","placeholder","Feedback","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/AddDevice.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport {Card, FloatingLabel} from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\nfunction AddDevice({ onAdd }) {\r\n    const [name, setName] = useState('');\r\n    const [ipAddress, setIPAddress] = useState('');\r\n    const [port, setPort] = useState('');\r\n    const [data, setData] = useState([]);\r\n    const [ipError, setIpError] = useState('');\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const isValidIP = validateIPAddress(ipAddress);\r\n\r\n        if (!isValidIP) {\r\n            setIpError('Неправильный формат IP-адреса');\r\n            return;\r\n        }\r\n\r\n        const isNewIP = !data.some((item) => item.ipAddress === ipAddress);\r\n\r\n        if (!isNewIP) {\r\n            setIpError('Такой IP-адрес уже существует');\r\n            return;\r\n        }\r\n\r\n        const newData = {\r\n            name: name,\r\n            ipAddress: ipAddress,\r\n            port: port\r\n        };\r\n\r\n        onAdd(newData);\r\n        setData([...data, newData]);\r\n        setName('');\r\n        setIPAddress('');\r\n        setIpError('');\r\n        setPort('');\r\n    };\r\n\r\n    const validateIPAddress = (ip) => {\r\n        const ipPattern = /^([0-9]{1,3}\\.){3}[0-9]{1,3}$/;\r\n        return ipPattern.test(ip);\r\n    };\r\n\r\n    return (\r\n\r\n\r\n                <Form>\r\n                    <Row>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Label htmlFor=\"name\" visuallyHidden>\r\n                                Name\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                id=\"name\"\r\n                                className=\"mb-2 \"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                placeholder=\"Имя\"\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Label htmlFor=\"ipAdress\" visuallyHidden>\r\n                                IP\r\n                            </Form.Label>\r\n                            <InputGroup className=\"mb-2\">\r\n                                <Form.Control\r\n                                    className={`mb-2 ${ipError ? 'is-invalid' : ''}`}\r\n                                    type=\"ip\"\r\n                                    id=\"ipAdress\"\r\n                                    value={ipAddress}\r\n                                    onChange={(e) => setIPAddress(e.target.value)}\r\n                                    placeholder=\"IP-Адрес\"\r\n                                />\r\n                                <Form.Control.Feedback type=\"invalid\">{ipError}</Form.Control.Feedback>\r\n                            </InputGroup>\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Form.Label htmlFor=\"port\" visuallyHidden>\r\n                                Port\r\n                            </Form.Label>\r\n                            <Form.Control\r\n                                type=\"text\"\r\n                                id=\"port\"\r\n                                className=\"mb-2 \"\r\n                                value={port}\r\n                                onChange={(e) => setPort(e.target.value)}\r\n                                placeholder=\"Порт\"\r\n                            />\r\n                        </Col>\r\n                        <Col xs=\"auto\">\r\n                            <Button type=\"submit\" className=\"mb-2\" onClick={handleSubmit}>\r\n                                Добавить\r\n                            </Button>\r\n                        </Col>\r\n                    </Row>\r\n                </Form>\r\n           \r\n    );\r\n}\r\n\r\nexport default AddDevice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}