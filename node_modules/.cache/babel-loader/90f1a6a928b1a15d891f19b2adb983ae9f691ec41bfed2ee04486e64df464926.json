{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\AddDevice.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\nimport ServerContext from './ServerContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddDevice() {\n  _s();\n  const {\n    addServer\n  } = useContext(ServerContext);\n  const [name, setName] = useState('');\n  const [ipAddress, setIPAddress] = useState('');\n  const [port, setPort] = useState('');\n  const [ipError, setIpError] = useState('');\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleForm = () => {\n    setIsOpen(!isOpen);\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    const isValidIP = validateIPAddress(ipAddress);\n    if (!isValidIP) {\n      setIpError('Неправильный формат IP-адреса');\n      return;\n    }\n    const newData = {\n      name: name,\n      ipAddress: ipAddress,\n      port: port\n    };\n    addServer(newData);\n    setName('');\n    setIPAddress('');\n    setIpError('');\n    setPort('');\n  };\n  const validateIPAddress = ip => {\n    const ipParts = ip.split('.');\n    if (ipParts.length !== 4) {\n      return false;\n    }\n    for (let i = 0; i < 4; i++) {\n      const part = parseInt(ipParts[i]);\n      if (isNaN(part) || part < 0 || part > 255) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return isOpen ? /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"name\",\n          visuallyHidden: true,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"name\",\n          className: \"mb-2 \",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"ipAdress\",\n          visuallyHidden: true,\n          children: \"IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            className: `mb-2 ${ipError ? 'is-invalid' : ''}`,\n            type: \"ip\",\n            id: \"ipAdress\",\n            value: ipAddress,\n            onChange: e => {\n              setIPAddress(e.target.value);\n              const isValidIP = validateIPAddress(e.target.value);\n              setIpError(isValidIP ? '' : 'Неправильный формат IP-адреса');\n            },\n            placeholder: \"IP-\\u0410\\u0434\\u0440\\u0435\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: ipError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"port\",\n          visuallyHidden: true,\n          children: \"Port\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"port\",\n          className: \"mb-2 \",\n          value: port,\n          onChange: e => setPort(e.target.value),\n          placeholder: \"\\u041F\\u043E\\u0440\\u0442\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mb-2\",\n          onClick: handleSubmit,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-danger\",\n          onClick: toggleForm,\n          children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 13\n  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n    className: \"my-3\",\n    onClick: toggleForm,\n    children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 13\n  }, this);\n}\n_s(AddDevice, \"58YSVxAUbhaHsA1EmU2hZI+bjxw=\");\n_c = AddDevice;\nexport default AddDevice;\nvar _c;\n$RefreshReg$(_c, \"AddDevice\");","map":{"version":3,"names":["React","useState","useContext","Button","Col","Form","InputGroup","Row","ServerContext","jsxDEV","_jsxDEV","AddDevice","_s","addServer","name","setName","ipAddress","setIPAddress","port","setPort","ipError","setIpError","isOpen","setIsOpen","toggleForm","handleSubmit","event","preventDefault","isValidIP","validateIPAddress","newData","ip","ipParts","split","length","i","part","parseInt","isNaN","children","xs","Label","htmlFor","visuallyHidden","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","id","className","value","onChange","e","target","placeholder","Feedback","onClick","variant","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/AddDevice.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport ServerContext from './ServerContext';\r\n\r\nfunction AddDevice() {\r\n    const { addServer } = useContext(ServerContext);\r\n\r\n    const [name, setName] = useState('');\r\n    const [ipAddress, setIPAddress] = useState('');\r\n    const [port, setPort] = useState('');\r\n    const [ipError, setIpError] = useState('');\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleForm = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        const isValidIP = validateIPAddress(ipAddress);\r\n\r\n        if (!isValidIP) {\r\n            setIpError('Неправильный формат IP-адреса');\r\n            return;\r\n        }\r\n\r\n        const newData = {\r\n            name: name,\r\n            ipAddress: ipAddress,\r\n            port: port\r\n        };\r\n\r\n        addServer(newData);\r\n        setName('');\r\n        setIPAddress('');\r\n        setIpError('');\r\n        setPort('');\r\n    };\r\n\r\n    const validateIPAddress = (ip) => {\r\n        const ipParts = ip.split('.');\r\n        if (ipParts.length !== 4) {\r\n            return false;\r\n        }\r\n        for (let i = 0; i < 4; i++) {\r\n            const part = parseInt(ipParts[i]);\r\n            if (isNaN(part) || part < 0 || part > 255) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n\r\n    return (\r\n        isOpen ? (\r\n            <Form>\r\n                <Row>\r\n                    <Col xs=\"auto\">\r\n                        <Form.Label htmlFor=\"name\" visuallyHidden>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            id=\"name\"\r\n                            className=\"mb-2 \"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            placeholder=\"Имя\"\r\n                        />\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Form.Label htmlFor=\"ipAdress\" visuallyHidden>\r\n                            IP\r\n                        </Form.Label>\r\n                        <InputGroup className=\"mb-2\">\r\n                            <Form.Control\r\n                                className={`mb-2 ${ipError ? 'is-invalid' : ''}`}\r\n                                type=\"ip\"\r\n                                id=\"ipAdress\"\r\n                                value={ipAddress}\r\n                                onChange={(e) => {\r\n                                    setIPAddress(e.target.value);\r\n                                    const isValidIP = validateIPAddress(e.target.value);\r\n                                    setIpError(isValidIP ? '' : 'Неправильный формат IP-адреса');\r\n                                }}\r\n                                placeholder=\"IP-Адрес\"\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">{ipError}</Form.Control.Feedback>\r\n                        </InputGroup>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Form.Label htmlFor=\"port\" visuallyHidden>\r\n                            Port\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                            type=\"text\"\r\n                            id=\"port\"\r\n                            className=\"mb-2 \"\r\n                            value={port}\r\n                            onChange={(e) => setPort(e.target.value)}\r\n                            placeholder=\"Порт\"\r\n                        />\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Button type=\"submit\" className=\"mb-2\" onClick={handleSubmit}>\r\n                            Добавить\r\n                        </Button>\r\n                    </Col>\r\n                    <Col xs=\"auto\">\r\n                        <Button variant=\"outline-danger\" onClick={toggleForm}>Закрыть</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form>\r\n        ) : (\r\n\r\n            <Button className=\"my-3\" onClick={toggleForm}>Добавить</Button>\r\n\r\n\r\n        )\r\n    );\r\n}\r\n\r\nexport default AddDevice;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}