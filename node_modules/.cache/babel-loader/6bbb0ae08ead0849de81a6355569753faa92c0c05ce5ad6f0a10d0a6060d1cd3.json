{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { ButtonGroup } from \"react-bootstrap\";\nimport { ToggleButton } from \"react-bootstrap\";\nimport '../Styles/ServerList.css';\nimport { uniqueId } from 'lodash';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerItem(_ref) {\n  _s();\n  let {\n    item,\n    selectedPort,\n    onPortSelection\n  } = _ref;\n  const {\n    name,\n    ipAddress,\n    port\n  } = item;\n  const [radioValue, setRadioValue] = useState('1');\n  const groupName = uniqueId('radioGroup_');\n  const radios = [{\n    ind: 'Порт 1',\n    value: '1'\n  }, {\n    ind: 'Порт 2',\n    value: '2'\n  }, {\n    ind: 'Порт 3',\n    value: '3'\n  }, {\n    ind: 'Порт 4',\n    value: '4'\n  }, {\n    ind: 'Порт 5',\n    value: '5'\n  }, {\n    ind: 'Порт 6',\n    value: '6'\n  }];\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '31rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      className: \"m-3\",\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n      className: \"mx-3\",\n      children: [item.ipAddress, \":\", item.port]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        name: groupName,\n        children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `radio-${idx}`,\n          type: \"radio\",\n          variant: \"outline-success\",\n          name: \"radio\",\n          value: radio.value,\n          checked: radioValue === radio.value,\n          onChange: e => setRadioValue(e.currentTarget.value),\n          children: radio.ind\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n_s(ServerItem, \"0tr0jPIcv7CJlem74cQYlIwyjnE=\");\n_c = ServerItem;\nexport default ServerItem;\nvar _c;\n$RefreshReg$(_c, \"ServerItem\");","map":{"version":3,"names":["useState","React","Card","ButtonGroup","ToggleButton","uniqueId","jsxDEV","_jsxDEV","ServerItem","_ref","_s","item","selectedPort","onPortSelection","name","ipAddress","port","radioValue","setRadioValue","groupName","radios","ind","value","style","width","children","Title","className","fileName","_jsxFileName","lineNumber","columnNumber","Subtitle","Body","map","radio","idx","id","type","variant","checked","onChange","e","currentTarget","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerItem.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {ButtonGroup} from \"react-bootstrap\";\r\nimport {ToggleButton} from \"react-bootstrap\";\r\nimport '../Styles/ServerList.css';\r\nimport { uniqueId } from 'lodash';\r\n\r\n\r\nfunction ServerItem({ item, selectedPort, onPortSelection }) {\r\n    const { name, ipAddress, port } = item;\r\n    const [radioValue, setRadioValue] = useState('1');\r\n    const groupName = uniqueId('radioGroup_');\r\n    const radios = [\r\n        { ind: 'Порт 1', value: '1' },\r\n        { ind: 'Порт 2', value: '2' },\r\n        { ind: 'Порт 3', value: '3' },\r\n        { ind: 'Порт 4', value: '4' },\r\n        { ind: 'Порт 5', value: '5' },\r\n        { ind: 'Порт 6', value: '6' },\r\n        ];\r\n    return (\r\n        <Card style={{ width: '31rem' }} >\r\n            <Card.Title className=\"m-3\">{item.name}</Card.Title>\r\n            <Card.Subtitle className=\"mx-3\">{item.ipAddress}:{item.port}</Card.Subtitle>\r\n            <Card.Body>\r\n                <ButtonGroup name={groupName}>\r\n                    {radios.map((radio, idx) => (\r\n                        <ToggleButton\r\n                            key={idx}\r\n                            id={`radio-${idx}`}\r\n                            type=\"radio\"\r\n                            variant= 'outline-success'\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={radioValue === radio.value}\r\n                            onChange={(e) => setRadioValue(e.currentTarget.value)}\r\n                        >\r\n                            {radio.ind}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ServerItem;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}