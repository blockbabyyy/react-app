{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\AddDevice.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport Row from 'react-bootstrap/Row';\nimport { FloatingLabel } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddDevice() {\n  _s();\n  // Создаем состояния для хранения введенных данных\n  const [name, setName] = useState('');\n  const [ipAddress, setIPAddress] = useState('');\n  // Создаем состояние для хранения массива данных\n  const [data, setData] = useState([]);\n  const [ipError, setIpError] = useState(''); // Состояние для хранения сообщения об ошибке\n\n  // Обработчик события при отправке формы\n  const handleSubmit = event => {\n    event.preventDefault(); // Предотвращаем перезагрузку страницы\n\n    // Создаем новый объект с введенными данными\n    const newData = {\n      name: name,\n      ipAddress: ipAddress\n    };\n\n    // Добавляем новый объект в массив данных\n    setData([...data, newData]);\n\n    // Сбрасываем значения полей ввода\n    setName('');\n    setIPAddress('');\n    setIPAddress('');\n    setIpError('');\n    const isValidIP = validateIPAddress(ipAddress); // Проверяем правильность IP-адреса\n\n    if (!isValidIP) {\n      setIpError('Неправильный формат IP-адреса'); // Устанавливаем сообщение об ошибке\n      return;\n    }\n  };\n\n  // Функция для проверки правильности формата IP-адреса\n  const validateIPAddress = ip => {\n    const ipPattern = /^([0-9]{1,3}\\.){3}[0-9]{1,3}$/;\n    return ipPattern.test(ip);\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      className: \"align-items-center\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"name\",\n          visuallyHidden: true,\n          children: \"Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"name\",\n          className: \"mb-2 \",\n          value: name,\n          onChange: e => setName(e.target.value),\n          placeholder: \"\\u0418\\u043C\\u044F\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          htmlFor: \"ipAdress\",\n          visuallyHidden: true,\n          children: \"IP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InputGroup, {\n          className: \"mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            required: true,\n            className: `mb-2 ${ipError ? 'is-invalid' : ''}`,\n            type: \"ip\",\n            id: \"ipAdress\",\n            value: ipAddress,\n            onChange: e => setIPAddress(e.target.value),\n            placeholder: \"IP-\\u0410\\u0434\\u0440\\u0435\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: \"\\u041D\\u0435\\u0432\\u0435\\u0440\\u043D\\u044B\\u0439 \\u0444\\u043E\\u0440\\u043C\\u0430\\u0442 IP-\\u0430\\u0434\\u0440\\u0435\\u0441\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: \"mb-2\",\n          onClick: handleSubmit,\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n_s(AddDevice, \"lmICpBkpfIg3k1jfp2QcBr7jrhI=\");\n_c = AddDevice;\nexport default AddDevice;\nvar _c;\n$RefreshReg$(_c, \"AddDevice\");","map":{"version":3,"names":["React","useState","Button","Col","Form","InputGroup","Row","FloatingLabel","jsxDEV","_jsxDEV","AddDevice","_s","name","setName","ipAddress","setIPAddress","data","setData","ipError","setIpError","handleSubmit","event","preventDefault","newData","isValidIP","validateIPAddress","ip","ipPattern","test","children","className","xs","Label","htmlFor","visuallyHidden","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","id","value","onChange","e","target","placeholder","required","Feedback","onClick","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/AddDevice.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Form from 'react-bootstrap/Form';\r\nimport InputGroup from 'react-bootstrap/InputGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport {FloatingLabel} from \"react-bootstrap\";\r\n\r\n\r\n\r\n\r\nfunction AddDevice() {\r\n    // Создаем состояния для хранения введенных данных\r\n    const [name, setName] = useState('');\r\n    const [ipAddress, setIPAddress] = useState('');\r\n    // Создаем состояние для хранения массива данных\r\n    const [data, setData] = useState([]);\r\n    const [ipError, setIpError] = useState(''); // Состояние для хранения сообщения об ошибке\r\n\r\n\r\n    // Обработчик события при отправке формы\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault(); // Предотвращаем перезагрузку страницы\r\n\r\n        // Создаем новый объект с введенными данными\r\n        const newData = {\r\n            name: name,\r\n            ipAddress: ipAddress\r\n        };\r\n\r\n        // Добавляем новый объект в массив данных\r\n        setData([...data, newData]);\r\n\r\n        // Сбрасываем значения полей ввода\r\n        setName('');\r\n        setIPAddress('');\r\n        setIPAddress('');\r\n        setIpError('');\r\n\r\n        const isValidIP = validateIPAddress(ipAddress); // Проверяем правильность IP-адреса\r\n\r\n        if (!isValidIP) {\r\n            setIpError('Неправильный формат IP-адреса'); // Устанавливаем сообщение об ошибке\r\n            return;\r\n        }\r\n    };\r\n\r\n    // Функция для проверки правильности формата IP-адреса\r\n    const validateIPAddress = (ip) => {\r\n        const ipPattern = /^([0-9]{1,3}\\.){3}[0-9]{1,3}$/;\r\n        return ipPattern.test(ip);\r\n    };\r\n\r\n    return (\r\n        <Form>\r\n            <Row className=\"align-items-center\">\r\n                <Col xs=\"auto\">\r\n                    <Form.Label htmlFor=\"name\" visuallyHidden>\r\n                        Name\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                        type=\"text\"\r\n                        id=\"name\"\r\n                        className=\"mb-2 \"\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                        placeholder=\"Имя\"\r\n                    />\r\n                </Col>\r\n                <Col xs=\"auto\">\r\n                    <Form.Label htmlFor=\"ipAdress\" visuallyHidden>\r\n                        IP\r\n                    </Form.Label>\r\n                    <InputGroup className=\"mb-2\">\r\n\r\n                        <Form.Control\r\n                            required\r\n                            className={`mb-2 ${ipError ? 'is-invalid' : ''}`}\r\n                            type=\"ip\"\r\n                            id=\"ipAdress\"\r\n                            value={ipAddress}\r\n                            onChange={(e) => setIPAddress(e.target.value)}\r\n                            placeholder=\"IP-Адрес\" />\r\n                        <Form.Control.Feedback type=\"invalid\">\r\n                            Неверный формат IP-адреса\r\n                        </Form.Control.Feedback>\r\n                    </InputGroup>\r\n                </Col>\r\n\r\n                <Col xs=\"auto\">\r\n                    <Button type=\"submit\" className=\"mb-2\" onClick={handleSubmit}>\r\n                        Добавить\r\n                    </Button>\r\n                </Col>\r\n            </Row>\r\n        </Form>\r\n    );\r\n}\r\n\r\nexport default AddDevice;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}