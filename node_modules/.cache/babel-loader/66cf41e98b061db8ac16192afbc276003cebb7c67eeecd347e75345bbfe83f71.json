{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerItem(_ref) {\n  _s();\n  let {\n    item\n  } = _ref;\n  const [activeButton, setActiveButton] = useState(\"1\");\n  const radios = [{\n    name: 'Active',\n    value: '1'\n  }, {\n    name: 'Radio',\n    value: '2'\n  }, {\n    name: 'Radio',\n    value: '3'\n  }];\n  const handleButtonClick = async buttonValue => {\n    try {\n      const response = await axios.get(`http://${item.ipAddress}:${item.port}/api/${buttonValue}`);\n      console.log(`Отправлен гет-запрос для элемента ${item.name}, кнопка ${buttonValue}`);\n      console.log('Ответ:', response.data);\n    } catch (error) {\n      console.error('Ошибка при выполнении гет-запроса:', error);\n    }\n    setActiveButton(buttonValue);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"IP \\u0430\\u0434\\u0440\\u0435\\u0441: \", item.ipAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), \"\\u041F\\u043E\\u0440\\u0442: \", item.port]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: radios.map((radio, idx) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `radio-${idx}`,\n          type: \"radio\",\n          variant: idx % 2 ? 'outline-success' : 'outline-danger',\n          name: \"radio\",\n          value: radio.value,\n          checked: activeButton === radio.value,\n          onChange: e => setActiveButton(e.currentTarget.value),\n          children: radio.name\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(ServerItem, \"c2KC8lJYAZJXaWc4TniqWpHVDt0=\");\n_c = ServerItem;\nexport default ServerItem;\nvar _c;\n$RefreshReg$(_c, \"ServerItem\");","map":{"version":3,"names":["React","useState","Card","ToggleButton","ButtonGroup","axios","jsxDEV","_jsxDEV","ServerItem","_ref","_s","item","activeButton","setActiveButton","radios","name","value","handleButtonClick","buttonValue","response","get","ipAddress","port","console","log","data","error","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","map","radio","idx","id","type","variant","checked","onChange","e","currentTarget","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport axios from 'axios';\r\n\r\nfunction ServerItem({ item }) {\r\n    const [activeButton, setActiveButton] = useState(\"1\");\r\n\r\n    const radios = [\r\n        { name: 'Active', value: '1' },\r\n        { name: 'Radio', value: '2' },\r\n        { name: 'Radio', value: '3' },\r\n    ];\r\n\r\n    const handleButtonClick = async (buttonValue) => {\r\n        try {\r\n            const response = await axios.get(`http://${item.ipAddress}:${item.port}/api/${buttonValue}`);\r\n            console.log(`Отправлен гет-запрос для элемента ${item.name}, кнопка ${buttonValue}`);\r\n            console.log('Ответ:', response.data);\r\n        } catch (error) {\r\n            console.error('Ошибка при выполнении гет-запроса:', error);\r\n        }\r\n\r\n        setActiveButton(buttonValue);\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{item.name}</Card.Title>\r\n                <Card.Text>\r\n                    IP адрес: {item.ipAddress}\r\n                    <br />\r\n                    Порт: {item.port}\r\n                </Card.Text>\r\n                <ButtonGroup>\r\n                    {radios.map((radio, idx) => (\r\n                        <ToggleButton\r\n                            key={idx}\r\n                            id={`radio-${idx}`}\r\n                            type=\"radio\"\r\n                            variant={idx % 2 ? 'outline-success' : 'outline-danger'}\r\n                            name=\"radio\"\r\n                            value={radio.value}\r\n                            checked={activeButton === radio.value}\r\n                            onChange={(e) => setActiveButton(e.currentTarget.value)}\r\n                        >\r\n                            {radio.name}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ServerItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}