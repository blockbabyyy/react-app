{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerItem.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerItem(_ref) {\n  _s();\n  let {\n    item\n  } = _ref;\n  const [activeButton, setActiveButton] = useState(null);\n  const handleButtonClick = async buttonValue => {\n    try {\n      const response = await axios.get(`http://${item.ipAddress}:${item.port}/api/${buttonValue}`);\n      console.log(`Отправлен гет-запрос для элемента ${item.name}, кнопка ${buttonValue}`);\n      console.log('Ответ:', response.data);\n    } catch (error) {\n      console.error('Ошибка при выполнении гет-запроса:', error);\n    }\n  };\n  const handleButtonChange = buttonValue => {\n    if (activeButton === buttonValue) {\n      setActiveButton(null);\n    } else {\n      setActiveButton(buttonValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [\"IP \\u0430\\u0434\\u0440\\u0435\\u0441: \", item.ipAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), \"\\u041F\\u043E\\u0440\\u0442: \", item.port]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        toggle: true,\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n          type: \"radio\",\n          variant: \"primary\",\n          value: 1,\n          checked: activeButton === 1,\n          onChange: e => setActiveButton(e.currentTarget.value),\n          children: \"\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430 1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n          type: \"radio\",\n          variant: \"primary\",\n          value: 2,\n          checked: activeButton === 2,\n          onChange: e => setActiveButton(e.currentTarget.value),\n          children: \"\\u041A\\u043D\\u043E\\u043F\\u043A\\u0430 2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n}\n_s(ServerItem, \"2IlxFF4hDMq20XkKpqpiCEEIzsY=\");\n_c = ServerItem;\nexport default ServerItem;\nvar _c;\n$RefreshReg$(_c, \"ServerItem\");","map":{"version":3,"names":["React","useState","Card","ToggleButton","ButtonGroup","axios","jsxDEV","_jsxDEV","ServerItem","_ref","_s","item","activeButton","setActiveButton","handleButtonClick","buttonValue","response","get","ipAddress","port","console","log","name","data","error","handleButtonChange","children","Body","Title","fileName","_jsxFileName","lineNumber","columnNumber","Text","toggle","className","type","variant","value","checked","onChange","e","currentTarget","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerItem.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport axios from 'axios';\r\n\r\nfunction ServerItem({ item }) {\r\n    const [activeButton, setActiveButton] = useState(null);\r\n\r\n    const handleButtonClick = async (buttonValue) => {\r\n        try {\r\n            const response = await axios.get(`http://${item.ipAddress}:${item.port}/api/${buttonValue}`);\r\n            console.log(`Отправлен гет-запрос для элемента ${item.name}, кнопка ${buttonValue}`);\r\n            console.log('Ответ:', response.data);\r\n        } catch (error) {\r\n            console.error('Ошибка при выполнении гет-запроса:', error);\r\n        }\r\n    };\r\n\r\n    const handleButtonChange = (buttonValue) => {\r\n        if (activeButton === buttonValue) {\r\n            setActiveButton(null);\r\n        } else {\r\n            setActiveButton(buttonValue);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Body>\r\n                <Card.Title>{item.name}</Card.Title>\r\n                <Card.Text>\r\n                    IP адрес: {item.ipAddress}\r\n                    <br />\r\n                    Порт: {item.port}\r\n                </Card.Text>\r\n                <ButtonGroup toggle className=\"mb-2\">\r\n                    <ToggleButton\r\n                        type=\"radio\"\r\n                        variant=\"primary\"\r\n                        value={1}\r\n                        checked={activeButton === 1}\r\n                        onChange={(e) => setActiveButton(e.currentTarget.value)}\r\n\r\n                    >\r\n                        Кнопка 1\r\n                    </ToggleButton>\r\n                    <ToggleButton\r\n                        type=\"radio\"\r\n                        variant=\"primary\"\r\n                        value={2}\r\n                        checked={activeButton === 2}\r\n                        onChange={(e) => setActiveButton(e.currentTarget.value)}\r\n\r\n                    >\r\n                        Кнопка 2\r\n                    </ToggleButton>\r\n                    {/* Аналогично для остальных кнопок */}\r\n                </ButtonGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ServerItem;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}