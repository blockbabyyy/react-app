{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerList.js\",\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ToggleButton from 'react-bootstrap/ToggleButton';\nimport ServerContext from './ServerContext';\nimport { Col, Row } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerList() {\n  _s2();\n  var _s = $RefreshSig$();\n  const {\n    servers,\n    deleteServer,\n    editServer\n  } = useContext(ServerContext);\n  const handleDelete = server => {\n    deleteServer(server);\n  };\n  const handleEdit = server => {\n    editServer(server);\n  };\n  const ServerCard = _ref => {\n    _s();\n    let {\n      server\n    } = _ref;\n    const [selectedOption, setSelectedOption] = useState('');\n    const handleOptionChange = selectedOption => {\n      setSelectedOption(selectedOption);\n      // Вы можете выполнять любую другую логику или обновлять данные сервера здесь на основе выбранной опции\n      // Например, вы можете обновить объект 'server' значением выбранной опции\n    };\n\n    return /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        height: '30rem',\n        width: '20rem',\n        marginRight: '10px'\n      },\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n          children: server.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"IP Address:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), \" \", server.ipAddress, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Port:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), \" \", server.port]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          children: [1, 2, 3, 4, 5, 6].map(option => /*#__PURE__*/_jsxDEV(ToggleButton, {\n            id: `radio-${server.ipAddress}${option}`,\n            type: \"radio\",\n            variant: 'outline-primary',\n            name: `radio-group-${server.ipAddress}`,\n            value: `${server.ipAddress}${option}`,\n            checked: selectedOption === `${server.ipAddress}${option}`,\n            onChange: e => handleOptionChange(e.currentTarget.value),\n            children: option\n          }, `${server.ipAddress}${option}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"me-1\",\n          variant: \"outline-danger\",\n          onClick: () => handleDelete(server),\n          children: \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"me-1\",\n          variant: \"outline-primary\",\n          onClick: () => handleEdit(server),\n          children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  };\n  _s(ServerCard, \"+aYHZE0a/835MlUfESRBJSmwxHw=\");\n  return /*#__PURE__*/_jsxDEV(Row, {\n    xs: 1,\n    md: 2,\n    lg: 4,\n    className: \"g-4\",\n    children: servers.map((server, index) => /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(ServerCard, {\n        server: server\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n_s2(ServerList, \"ZtJ6zL/kmcWF1PHvVCpD1a8PtHU=\");\n_c = ServerList;\nexport default ServerList;\nvar _c;\n$RefreshReg$(_c, \"ServerList\");","map":{"version":3,"names":["React","useContext","useState","Card","Button","ButtonGroup","ToggleButton","ServerContext","Col","Row","jsxDEV","_jsxDEV","ServerList","_s2","_s","$RefreshSig$","servers","deleteServer","editServer","handleDelete","server","handleEdit","ServerCard","_ref","selectedOption","setSelectedOption","handleOptionChange","style","height","width","marginRight","children","Body","Title","name","fileName","_jsxFileName","lineNumber","columnNumber","Text","ipAddress","port","map","option","id","type","variant","value","checked","onChange","e","currentTarget","className","onClick","xs","md","lg","index","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerList.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ServerContext from './ServerContext';\r\nimport { Col, Row } from 'react-bootstrap';\r\n\r\nfunction ServerList() {\r\n    const { servers, deleteServer, editServer } = useContext(ServerContext);\r\n\r\n    const handleDelete = (server) => {\r\n        deleteServer(server);\r\n    };\r\n\r\n    const handleEdit = (server) => {\r\n        editServer(server);\r\n    };\r\n\r\n    const ServerCard = ({ server }) => {\r\n        const [selectedOption, setSelectedOption] = useState('');\r\n\r\n        const handleOptionChange = (selectedOption) => {\r\n            setSelectedOption(selectedOption);\r\n            // Вы можете выполнять любую другую логику или обновлять данные сервера здесь на основе выбранной опции\r\n            // Например, вы можете обновить объект 'server' значением выбранной опции\r\n        };\r\n\r\n        return (\r\n            <Card style={{ height: '30rem', width: '20rem', marginRight: '10px' }}>\r\n                <Card.Body>\r\n                    <Card.Title>{server.name}</Card.Title>\r\n                    <Card.Text>\r\n                        <strong>IP Address:</strong> {server.ipAddress}\r\n                        <br />\r\n                        <strong>Port:</strong> {server.port}\r\n                    </Card.Text>\r\n                    <ButtonGroup>\r\n                        {[1, 2, 3, 4, 5, 6].map((option) => (\r\n                            <ToggleButton\r\n                                key={`${server.ipAddress}${option}`}\r\n                                id={`radio-${server.ipAddress}${option}`}\r\n                                type=\"radio\"\r\n                                variant={'outline-primary'}\r\n                                name={`radio-group-${server.ipAddress}`}\r\n                                value={`${server.ipAddress}${option}`}\r\n                                checked={selectedOption === `${server.ipAddress}${option}`}\r\n                                onChange={(e) => handleOptionChange(e.currentTarget.value)}\r\n                            >\r\n                                {option}\r\n                            </ToggleButton>\r\n                        ))}\r\n                    </ButtonGroup>\r\n                    <Button className=\"me-1\" variant=\"outline-danger\" onClick={() => handleDelete(server)}>\r\n                        Удалить\r\n                    </Button>\r\n                    <Button className=\"me-1\" variant=\"outline-primary\" onClick={() => handleEdit(server)}>\r\n                        Изменить\r\n                    </Button>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Row xs={1} md={2} lg={4} className=\"g-4\">\r\n            {servers.map((server, index) => (\r\n                <Col key={index}>\r\n                    <ServerCard server={server} />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ServerList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}