{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zinov\\\\WebstormProjects\\\\untitled2\\\\src\\\\components\\\\ServerItem.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport React from 'react';\nimport Card from 'react-bootstrap/Card';\nimport { ButtonGroup } from \"react-bootstrap\";\nimport { ToggleButton } from \"react-bootstrap\";\nimport '../Styles/ServerList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServerItem(_ref) {\n  _s();\n  let {\n    item,\n    buttonNames\n  } = _ref;\n  const {\n    name,\n    ipAddress,\n    port\n  } = item;\n  const [radioValue, setRadioValue] = useState(buttonNames[0]);\n  const radios = buttonNames.map((name, index) => ({\n    ind: name,\n    value: `${index}`\n  }));\n  const handleRadioChange = value => {\n    setRadioValue(value);\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: '31rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n      className: \"m-3\",\n      children: item.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Subtitle, {\n      className: \"mx-3\",\n      children: [item.ipAddress, \":\", item.port]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n        children: buttonNames.map((buttonName, index) => /*#__PURE__*/_jsxDEV(ToggleButton, {\n          id: `radio-${index}`,\n          type: \"radio\",\n          variant: \"outline-success\",\n          name: \"radio\",\n          value: buttonName,\n          checked: radioValue === buttonName,\n          onChange: e => handleRadioChange(e.currentTarget.value),\n          children: buttonName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n}\n_s(ServerItem, \"jA5vF1Eev4Q8/ah+6usF7bRsD8Q=\");\n_c = ServerItem;\nexport default ServerItem;\nvar _c;\n$RefreshReg$(_c, \"ServerItem\");","map":{"version":3,"names":["useState","React","Card","ButtonGroup","ToggleButton","jsxDEV","_jsxDEV","ServerItem","_ref","_s","item","buttonNames","name","ipAddress","port","radioValue","setRadioValue","radios","map","index","ind","value","handleRadioChange","style","width","children","Title","className","fileName","_jsxFileName","lineNumber","columnNumber","Subtitle","Body","buttonName","id","type","variant","checked","onChange","e","currentTarget","_c","$RefreshReg$"],"sources":["C:/Users/zinov/WebstormProjects/untitled2/src/components/ServerItem.js"],"sourcesContent":["import {useState} from \"react\";\r\nimport React from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {ButtonGroup} from \"react-bootstrap\";\r\nimport {ToggleButton} from \"react-bootstrap\";\r\nimport '../Styles/ServerList.css';\r\n\r\nfunction ServerItem({ item, buttonNames }) {\r\n    const { name, ipAddress, port } = item;\r\n    const [radioValue, setRadioValue] = useState(buttonNames[0]);\r\n    const radios = buttonNames.map((name, index) => ({ ind: name, value: `${index}` }));\r\n\r\n    const handleRadioChange = (value) => {\r\n        setRadioValue(value);\r\n    };\r\n    return (\r\n        <Card style={{ width: '31rem' }} >\r\n            <Card.Title className=\"m-3\">{item.name}</Card.Title>\r\n            <Card.Subtitle className=\"mx-3\">{item.ipAddress}:{item.port}</Card.Subtitle>\r\n            <Card.Body>\r\n                <ButtonGroup>\r\n                    {buttonNames.map((buttonName, index) => (\r\n                        <ToggleButton\r\n                            key={index}\r\n                            id={`radio-${index}`}\r\n                            type=\"radio\"\r\n                            variant=\"outline-success\"\r\n                            name=\"radio\"\r\n                            value={buttonName}\r\n                            checked={radioValue === buttonName}\r\n                            onChange={(e) => handleRadioChange(e.currentTarget.value)}\r\n                        >\r\n                            {buttonName}\r\n                        </ToggleButton>\r\n                    ))}\r\n                </ButtonGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ServerItem;"],"mappings":";;AAAA,SAAQA,QAAQ,QAAO,OAAO;AAC9B,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,sBAAsB;AACvC,SAAQC,WAAW,QAAO,iBAAiB;AAC3C,SAAQC,YAAY,QAAO,iBAAiB;AAC5C,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAAC,IAAA,EAAwB;EAAAC,EAAA;EAAA,IAAvB;IAAEC,IAAI;IAAEC;EAAY,CAAC,GAAAH,IAAA;EACrC,MAAM;IAAEI,IAAI;IAAEC,SAAS;IAAEC;EAAK,CAAC,GAAGJ,IAAI;EACtC,MAAM,CAACK,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAACW,WAAW,CAAC,CAAC,CAAC,CAAC;EAC5D,MAAMM,MAAM,GAAGN,WAAW,CAACO,GAAG,CAAC,CAACN,IAAI,EAAEO,KAAK,MAAM;IAAEC,GAAG,EAAER,IAAI;IAAES,KAAK,EAAG,GAAEF,KAAM;EAAE,CAAC,CAAC,CAAC;EAEnF,MAAMG,iBAAiB,GAAID,KAAK,IAAK;IACjCL,aAAa,CAACK,KAAK,CAAC;EACxB,CAAC;EACD,oBACIf,OAAA,CAACJ,IAAI;IAACqB,KAAK,EAAE;MAAEC,KAAK,EAAE;IAAQ,CAAE;IAAAC,QAAA,gBAC5BnB,OAAA,CAACJ,IAAI,CAACwB,KAAK;MAACC,SAAS,EAAC,KAAK;MAAAF,QAAA,EAAEf,IAAI,CAACE;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAa,CAAC,eACpDzB,OAAA,CAACJ,IAAI,CAAC8B,QAAQ;MAACL,SAAS,EAAC,MAAM;MAAAF,QAAA,GAAEf,IAAI,CAACG,SAAS,EAAC,GAAC,EAACH,IAAI,CAACI,IAAI;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAgB,CAAC,eAC5EzB,OAAA,CAACJ,IAAI,CAAC+B,IAAI;MAAAR,QAAA,eACNnB,OAAA,CAACH,WAAW;QAAAsB,QAAA,EACPd,WAAW,CAACO,GAAG,CAAC,CAACgB,UAAU,EAAEf,KAAK,kBAC/Bb,OAAA,CAACF,YAAY;UAET+B,EAAE,EAAG,SAAQhB,KAAM,EAAE;UACrBiB,IAAI,EAAC,OAAO;UACZC,OAAO,EAAC,iBAAiB;UACzBzB,IAAI,EAAC,OAAO;UACZS,KAAK,EAAEa,UAAW;UAClBI,OAAO,EAAEvB,UAAU,KAAKmB,UAAW;UACnCK,QAAQ,EAAGC,CAAC,IAAKlB,iBAAiB,CAACkB,CAAC,CAACC,aAAa,CAACpB,KAAK,CAAE;UAAAI,QAAA,EAEzDS;QAAU,GATNf,KAAK;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAUA,CACjB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACO;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEf;AAACtB,EAAA,CAhCQF,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AAkCnB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}