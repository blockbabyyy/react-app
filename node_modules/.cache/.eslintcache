[{"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\index.js":"1","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\reportWebVitals.js":"2","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\App.js":"3","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\dev\\index.js":"4","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\components\\Header.js":"5","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\components\\ServerContext.js":"6","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\components\\ServerList.js":"7","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\components\\AddDevice.js":"8","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\dev\\useInitial.js":"9","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\dev\\previews.jsx":"10","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\dev\\palette.jsx":"11"},{"size":913,"mtime":1689863827277,"results":"12","hashOfConfig":"13"},{"size":375,"mtime":1689858201482,"results":"14","hashOfConfig":"13"},{"size":615,"mtime":1689858201467,"results":"15","hashOfConfig":"13"},{"size":189,"mtime":1689858201482,"results":"16","hashOfConfig":"13"},{"size":798,"mtime":1689858201482,"results":"17","hashOfConfig":"13"},{"size":1459,"mtime":1689858201482,"results":"18","hashOfConfig":"13"},{"size":3927,"mtime":1689858201482,"results":"19","hashOfConfig":"13"},{"size":4842,"mtime":1689858201482,"results":"20","hashOfConfig":"13"},{"size":530,"mtime":1689858201482,"results":"21","hashOfConfig":"13"},{"size":278,"mtime":1689858201482,"results":"22","hashOfConfig":"13"},{"size":563,"mtime":1689858201482,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1cevwm9",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\index.js",[],[],"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\App.js",[],[],"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\dev\\index.js",[],[],"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\components\\Header.js",[],[],"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\components\\ServerContext.js",[],[],"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\components\\ServerList.js",["59"],[],"import React, { useContext, useState, useEffect } from 'react';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\r\nimport ToggleButton from 'react-bootstrap/ToggleButton';\r\nimport ServerContext from './ServerContext';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport axios from \"axios\";\r\n\r\nfunction ServerList() {\r\n    const { servers, deleteServer, editServer } = useContext(ServerContext);\r\n\r\n    const handleDelete = (server) => {\r\n        deleteServer(server);\r\n    };\r\n\r\n    const handleEdit = (server) => {\r\n        editServer(server);\r\n    };\r\n\r\n    const ServerCard = ({ server }) => {\r\n        const [selectedOption, setSelectedOption] = useState('');\r\n\r\n        const handleOptionChange = (selectedOption) => {\r\n            setSelectedOption(selectedOption);\r\n            localStorage.setItem(`selectedOption-${server.ipAddress}`, selectedOption);\r\n            axios.get(`http://${server.ipAddress}:${server.port}/api/option?selectedOption=${selectedOption}`)\r\n                .then((response) => {\r\n                    // Обработка ответа\r\n                    console.log(response.data);\r\n                })\r\n                .catch((error) => {\r\n                    // Обработка ошибок\r\n                    console.error(error);\r\n                });\r\n        };\r\n\r\n\r\n        useEffect(() => {\r\n            const savedOption = localStorage.getItem(`selectedOption-${server.ipAddress}`);\r\n            if (savedOption) {\r\n                setSelectedOption(savedOption);\r\n            }\r\n        }, []);\r\n\r\n        return (\r\n            <Card style={{ height: '15rem', width: '20rem', marginRight: '10px' }}>\r\n                <Card.Body>\r\n                    <Card.Title>{server.name}</Card.Title>\r\n\r\n                    <Card.Text>\r\n                        IP-адрес: {server.ipAddress}\r\n                        <br />\r\n                        Порт: {server.port}\r\n                    </Card.Text>\r\n                    <Row>\r\n                    <ButtonGroup>\r\n                        {[1, 2, 3, 4, 5, 6].map((option) => (\r\n                            <ToggleButton\r\n                                key={`${server.ipAddress}${option}`}\r\n                                id={`radio-${server.ipAddress}${option}`}\r\n                                type=\"radio\"\r\n                                variant={'outline-primary'}\r\n                                name={`radio-group-${server.ipAddress}`}\r\n                                value={`${server.ipAddress}${option}`}\r\n                                checked={selectedOption === `${server.ipAddress}${option}`}\r\n                                onChange={(e) => handleOptionChange(e.currentTarget.value)}\r\n                            >\r\n                                {option}\r\n                            </ToggleButton>\r\n\r\n                        ))}\r\n                    </ButtonGroup>\r\n                    </Row>\r\n                    <br/>\r\n                    <Row>\r\n                   <ButtonGroup justify>\r\n                       <Button  className=\"me-1\" variant=\"outline-primary\" disabled onClick={() => handleEdit(server)}>\r\n                           Изменить\r\n                       </Button>\r\n                       <Button  className=\"me-1\" variant=\"outline-danger\" onClick={() => handleDelete(server)}>\r\n                           Удалить\r\n                       </Button>\r\n                   </ButtonGroup>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <Row xs={1} md={2} lg={4} className=\"g-4\">\r\n            {servers.map((server, index) => (\r\n                <Col key={index}>\r\n                    <ServerCard server={server} />\r\n                </Col>\r\n            ))}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default ServerList;\r\n","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\components\\AddDevice.js",[],[],"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\dev\\useInitial.js",["60"],[],"import {useState} from 'react'\r\n\r\nexport const useInitial = () => {\r\n    const [status, setStatus] = useState({\r\n        loading: false,\r\n        error: false\r\n    })\r\n    /*\r\n      Implement hook functionality here.\r\n      If you need to execute async operation, set loading to true and when it's over, set loading to false.\r\n      If you caught some errors, set error status to true.\r\n      Initial hook is considered to be successfully completed if it will return {loading: false, error: false}.\r\n    */\r\n    return status\r\n}\r\n","C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\dev\\previews.jsx",[],[],"C:\\Users\\zinov\\WebstormProjects\\react-app\\src\\dev\\palette.jsx",[],[],{"ruleId":"61","severity":1,"message":"62","line":44,"column":12,"nodeType":"63","endLine":44,"endColumn":14,"suggestions":"64"},{"ruleId":"65","severity":1,"message":"66","line":4,"column":20,"nodeType":"67","messageId":"68","endLine":4,"endColumn":29},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'server.ipAddress'. Either include it or remove the dependency array.","ArrayExpression",["69"],"no-unused-vars","'setStatus' is assigned a value but never used.","Identifier","unusedVar",{"desc":"70","fix":"71"},"Update the dependencies array to be: [server.ipAddress]",{"range":"72","text":"73"},[1603,1605],"[server.ipAddress]"]